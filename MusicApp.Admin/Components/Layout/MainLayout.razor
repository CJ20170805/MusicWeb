@inherits LayoutComponentBase
@using MusicApp.Admin.Services
@using MusicApp.Domain.Entities
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@inject SignInManager<User> SignInManager
@inject ThemeService ThemeService

<MudThemeProvider Theme="@_theme" IsDarkMode="@ThemeService.IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider
    FullWidth="true"
    MaxWidth="MaxWidth.Small"
 />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Admin</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@ToggleDarkMode" />
        <MudMenu Icon="@Icons.Material.Filled.MoreVert"
                AriaLabel="Open user menu">
            <MudMenuItem>Profile</MudMenuItem>
            <MudMenuItem>My account</MudMenuItem>
            <MudMenuItem OnClick="HandleLogout">Logout</MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent MaxWidth="MaxWidth.Medium" Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };

       ThemeService.OnChange += async () => await InvokeAsync(StateHasChanged);
    }

    private void ToggleDarkMode() => ThemeService.ToggleDarkMode();

    private void HandleLogout()
    {
        // Redirect to the login page or home page
        NavigationManager.NavigateTo("/Account/logout", forceLoad: true);
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }


    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
    };

    public string DarkLightModeButtonIcon => ThemeService.IsDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}

