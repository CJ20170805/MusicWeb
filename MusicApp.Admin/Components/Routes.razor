@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Authorization
@using MusicApp.Admin.Components.Pages.Auth

<Router AppAssembly="typeof(Program).Assembly">
    <Found Context="routeData">
        @* @if (IsAuthRoute(routeData))
        {
            <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.AuthLayout)" />
        }
        else
        {
            <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
        } *@
        @if (IsAuthRoute(routeData))
        {
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.AuthLayout)" />
        }
        else
        {
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)">
                <NotAuthorized>
                    @if (context?.User?.Identity == null || !context.User.Identity.IsAuthenticated)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p>You are not authorized to view this page.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        }
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
    <NotFound>
        <LayoutView Layout="typeof(Layout.MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private bool IsAuthRoute(RouteData routeData)
    {
        if (routeData.PageType == null)
            return false;

        var authPageTypes = new[]
        {
            typeof(Login),         
            // typeof(Register),      
        };

        // Check if the current PageType is in the defined auth pages
        return authPageTypes.Contains(routeData.PageType);
    }
}
